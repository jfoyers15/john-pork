const int enableLeftMotor = 10;
const int leftMotorForwardPin = 8;
const int leftMotorBackwardPin = 9;

const int enableRightMotor = 5;
const int rightMotorForwardPin = 6;
const int rightMotorBackwardPin = 7;

const int IRSRight = 13;
const int IRSLeft = 12;

int timeSpent = 0;
int interval = 0;

const int f = 1;
const int b = 2;
const int r = 3;
const int l = 4;

int shift = 0;

void stop() {
  digitalWrite(leftMotorForwardPin, LOW);
  digitalWrite(leftMotorBackwardPin, LOW);

  digitalWrite(rightMotorForwardPin, LOW);
  digitalWrite(rightMotorBackwardPin, LOW);
}


int IRSRightReading = digitalRead(IRSRight);
int IRSLeftReading = digitalRead(IRSLeft);

// speed goes from -255 to 255, direction can be f/b/r/l, duration in miliseconds
void IDrive(int speed, int direction, int duration, bool constant) {
  timeSpent = 0;
  int interval = (direction == r || direction == l) ? 50 : 100;
  while (timeSpent < duration) {
    if (direction == 1) {
      digitalWrite(leftMotorForwardPin, HIGH);
      digitalWrite(leftMotorBackwardPin, LOW);

      digitalWrite(rightMotorForwardPin, HIGH);
      digitalWrite(rightMotorBackwardPin, LOW);
    }
    else if (direction == 2) {
      digitalWrite(leftMotorForwardPin, LOW);
      digitalWrite(leftMotorBackwardPin, HIGH);

      digitalWrite(rightMotorForwardPin, LOW);
      digitalWrite(rightMotorBackwardPin, HIGH);
    }
    else if (direction == 3) {
      digitalWrite(leftMotorForwardPin, HIGH);
      digitalWrite(leftMotorBackwardPin, LOW);

      digitalWrite(rightMotorForwardPin, LOW);
      digitalWrite(rightMotorBackwardPin, HIGH);
    }
    else if (direction == 4) {
      digitalWrite(leftMotorForwardPin, LOW);
      digitalWrite(leftMotorBackwardPin, HIGH);

      digitalWrite(rightMotorForwardPin, HIGH);
      digitalWrite(rightMotorBackwardPin, LOW);
    }
    analogWrite(enableLeftMotor, speed);
    analogWrite(enableRightMotor, speed);
    timeSpent += interval;
    delay(interval);
  }
  if (constant == false){
  stop();
  }
}

void carTurnLeft(){
      digitalWrite(rightMotorForwardPin, HIGH);
      digitalWrite(rightMotorBackwardPin, LOW);
      analogWrite(enableLeftMotor, 0);
      analogWrite(enableRightMotor, 255);
}
void carTurnRight(){
      digitalWrite(leftMotorForwardPin, HIGH);
      digitalWrite(leftMotorBackwardPin, LOW);
      analogWrite(enableLeftMotor, 255);
      analogWrite(enableRightMotor, 0);
}



void lineFollow(){
   IRSRightReading = digitalRead(IRSRight);
   IRSLeftReading = digitalRead(IRSLeft);
   serial.PrintIn(IRSLeftReading = digitalRead(IRSLeft));
   serial.PrintIn(IRSRightReading = digitalRead(IRSRight));


  if(shift == 0){
    carTurnRight();
    if(IRSRightReading == LOW){
      
      shift = 1;
     }
    }
  

  if(shift == 1){
    carTurnLeft();
    if(IRSLeftReading == LOW){
      shift = 0;
     }
    }
  

}


void setup() {
pinMode(enableLeftMotor, OUTPUT);
pinMode(leftMotorForwardPin, OUTPUT);
pinMode(leftMotorBackwardPin, OUTPUT);
pinMode(enableRightMotor, OUTPUT);
pinMode(rightMotorForwardPin, OUTPUT);
pinMode(rightMotorBackwardPin, OUTPUT);
pinMode(IRSRight, INPUT);
pinMode(IRSLeft, INPUT);
}

void loop() {
  lineFollow();


}
